/*
Copyright KM_2023 Hannah Blythe Morrison

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef USERSPACE
#define USERSPACE

#include "quantum.h"

// Layers and layer aliases.

enum tenkey_layers {
  LAYER_BASE,
  LAYER_SYM_LEFT,
  LAYER_SYM_RIGHT,
  LAYER_FILL_LEFT,
  LAYER_FILL_RIGHT,
  LAYER_NAV,
  LAYER_NUM,
  LAYER_FUNC
};

// Custom keycodes.

enum tenkey_keycodes {
  M_ALT_TAB = SAFE_RANGE
};

// Alternative keys for UK ISO keyboard layouts.

#define KC_UK_DQUO LSFT(KC_2)
#define KC_UK_PND LSFT(KC_3)
#define KC_UK_PIPE LSFT(KC_NUBS)
#define KC_UK_BSLS KC_NUBS
#define KC_UK_AT LSFT(KC_QUOT)
#define KC_UK_TILDE LSFT(KC_BSLS)
#define KC_UK_HASH KC_BSLS

// Modified keys.

#define KC_SFT_TAB LSFT(KC_TAB)

// Modifier keys in the style of homerow mods.

#define KC_W_ALT LALT_T(KC_W)
#define KC_R_CTL LCTL_T(KC_R)
#define KC_T_SFT LSFT_T(KC_T)
#define KC_P_GUI LGUI_T(KC_P)
#define KC_L_GUI LGUI_T(KC_J)
#define KC_N_SFT LSFT_T(KC_N)
#define KC_I_CTL LCTL_T(KC_I)
#define KC_Y_ALT LALT_T(KC_Y)

// Oneshot keys.

#define KC_OS_SFT OSM(MOD_LSFT)
#define KC_OS_FUNC OSL(LAYER_FUNC)

// Thumbkey layer keys.

#define KC_SPACE_NAV_LAYER LT(LAYER_NAV, KC_SPACE)
#define KC_ENTER_NUM_LAYER LT(LAYER_NUM, KC_ENTER)

// Pinky layer keys.

#define KC_A_SYM_LEFT OSL(LAYER_SYM_LEFT)
#define KC_O_SYM_RIGHT OSL(LAYER_SYM_RIGHT)

// Alternative side keys if no pinky key is present.

#define KC_X_SYM_LEFT OSL(LAYER_SYM_LEFT)
#define KC_DOT_SYM_RIGHT OSL(LAYER_SYM_RIGHT)

// Alternative keys for fill layer and fill keys in nav layer.

#ifdef TENKEY_FILL_LAYER_ENABLE
#define KC_S_FILL_LEFT LT(LAYER_FILL_LEFT, KC_S)
#define KC_E_FILL_RIGHT LT(LAYER_FILL_RIGHT, KC_E)
#define KC_NAV_ESC KC_ESC
#define KC_NAV_CAPS KC_CAPS
#else
#define KC_S_FILL_LEFT KC_S
#define KC_E_FILL_RIGHT KC_E
#define KC_NAV_ESC KC_Q
#define KC_NAV_CAPS KC_Z
#endif // TENKEY_FILL_LAYER_ENABLE

// Layout macros that allow preprocessor substitutions. Use these instead of the
// standard LAYOUT_ macros in keymap.c code. For example, the following will
// define the base layer for an OLKB Planck ortholinear keyboard: [LAYER_BASE] =
// TENKEY_LAYOUT_planck_grid( TENKEY_LAYOUT_BASE ),

#define TENKEY_LAYOUT_ferris_sweep(...) LAYOUT_split_3x5_2(__VA_ARGS__)

// Base layer for ten key keyboards.

#define KM_TEN_BASE_1L KC_ALT_W, KC_F, KC_GUI_P
#define KM_TEN_BASE_2L KC_CTL_R, KC_S_FILL_LEFT, KC_SFT_T
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_BASE_3L KC_A_SYM_LEFT, KC_X, KC_C, KC_D
#else
#define KM_TEN_BASE_3L KC_X_SYM_LEFT, KC_C, KC_D
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_BASE_1R KC_GUI_L, KC_U, KC_ALT_Y
#define KM_TEN_BASE_2R KC_SFT_N, KC_E_FILL_RIGHT, KC_CTL_I
#ifdef TENKEY_PINKY_ENABLE
#define KC_TEN_BASE_3R KC_H, KC_COMMA, KC_DOT, KC_O_SYM_RIGHT
#else
#define KC_TEN_BASE_3R KC_H, KC_COMMA, KC_DOT_SYM_RIGHT
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_BASE_L KC_SPACE_NAV_LAYER
#define KM_TEN_THUMB_BASE_R KC_ENTER_NUM_LAYER
#define KM_TEN_THUMB_BASE KM_TEN_THUMB_BASE_L, KM_TEN_THUMB_BASE_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_BASE_L KC_OS_SFT, KC_SPACE_NAV_LAYER
#define KM_TEN_THUMB_BASE_R KC_ENTER_NUM_LAYER, KC_BSPC
#define KM_TEN_THUMB_BASE KM_TEN_THUMB_BASE_L, KM_TEN_THUMB_BASE_R
#else
#define KM_TEN_THUMB_BASE
#endif
#endif

#define KM_TEN_BASE_1 KM_TEN_BASE_1L, KM_TEN_BASE_1R
#define KM_TEN_BASE_2 KM_TEN_BASE_2L, KM_TEN_BASE_2R
#define KM_TEN_BASE_3 KM_TEN_BASE_3L, KM_TEN_BASE_3R

#define TENKEY_LAYOUT_BASE KM_TEN_BASE_1, KM_TEN_BASE_2, KM_TEN_BASE_3, KM_TEN_THUMB_BASE

// Left fill layer for ten key keyboards.

#define KM_TEN_FILL_LEFT_1L KC_LALT, KC_NO, KC_LGUI
#define KM_TEN_FILL_LEFT_2L KC_LCTL, KC_S, KC_LSFT
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_FILL_LEFT_3L KC_NO, KC_NO, KC_NO, KC_NO
#else
#define KM_TEN_FILL_LEFT_3L KC_NO, KC_NO, KC_NO
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_FILL_LEFT_1R KC_J, KC_NO, KC_BSPC
#define KM_TEN_FILL_LEFT_2R KC_M, KC_NO, KC_O
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_FILL_LEFT_3R KC_K, KC_H, KC_DOT, KC_SLSH
#else
#define KM_TEN_FILL_LEFT_3R KC_K, KC_H, KC_SLSH
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_FILL_LEFT_L KC_TRNS
#define KM_TEN_THUMB_FILL_LEFT_R KC_TRNS
#define KM_TEN_THUMB_FILL_LEFT KM_TEN_THUMB_FILL_LEFT_L, KM_TEN_THUMB_FILL_LEFT_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_FILL_LEFT_L KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_FILL_LEFT_R KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_FILL_LEFT KM_TEN_THUMB_FILL_LEFT_L, KM_TEN_THUMB_FILL_LEFT_R
#else
#define KM_TEN_THUMB_FILL_LEFT
#endif
#endif

#define KM_TEN_FILL_LEFT_1 KM_TEN_FILL_LEFT_1L, KM_TEN_FILL_LEFT_1R
#define KM_TEN_FILL_LEFT_2 KM_TEN_FILL_LEFT_2L, KM_TEN_FILL_LEFT_2R
#define KM_TEN_FILL_LEFT_3 KM_TEN_FILL_LEFT_3L, KM_TEN_FILL_LEFT_3R

#define TENKEY_LAYOUT_FILL_LEFT KM_TEN_FILL_LEFT_1, KM_TEN_FILL_LEFT_2, KM_TEN_FILL_LEFT_3, KM_TEN_THUMB_FILL_LEFT

// Right fill layer for ten key keyboards.

#define KM_TEN_FILL_RIGHT_1L KC_Q, KC_NO, KC_B
#define KM_TEN_FILL_RIGHT_2L KC_A, KC_NO, KC_G
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_FILL_RIGHT_3L KC_Z, KC_X, KC_D, KC_V
#else
#define KM_TEN_FILL_RIGHT_3L KC_Z, KC_D, KC_V
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_FILL_RIGHT_1R KC_LGUI, KC_NO, KC_LALT
#define KM_TEN_FILL_RIGHT_2R KC_LSFT, KC_E, KC_LCTL
#define KM_TEN_FILL_RIGHT_3R KC_NO, KC_NO, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#else
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_FILL_RIGHT_L KC_TRNS
#define KM_TEN_THUMB_FILL_RIGHT_R KC_TRNS
#define KM_TEN_THUMB_FILL_RIGHT KM_TEN_THUMB_FILL_RIGHT_L, KM_TEN_THUMB_FILL_RIGHT_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_FILL_RIGHT_L KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_FILL_RIGHT_R KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_FILL_RIGHT KM_TEN_THUMB_FILL_RIGHT_L, KM_TEN_THUMB_FILL_RIGHT_R
#else
#define KM_TEN_THUMB_FILL_RIGHT
#endif
#endif

#define KM_TEN_FILL_RIGHT_1 KM_TEN_FILL_RIGHT_1L, KM_TEN_FILL_RIGHT_1R
#define KM_TEN_FILL_RIGHT_2 KM_TEN_FILL_RIGHT_2L, KM_TEN_FILL_RIGHT_2R
#define KM_TEN_FILL_RIGHT_3 KM_TEN_FILL_RIGHT_3L, KM_TEN_FILL_RIGHT_3R

#define TENKEY_LAYOUT_FILL_RIGHT KM_TEN_FILL_RIGHT_1, KM_TEN_FILL_RIGHT_2, KM_TEN_FILL_RIGHT_3, KM_TEN_THUMB_FILL_RIGHT

// Left symbol layer for ten key keyboards.

#define KM_TEN_SYM_LEFT_1L KC_EXLM, KC_QUES, KC_CIRC
#define KM_TEN_SYM_LEFT_2L KC_GRV, KC_PLUS, KC_COLN
#ifdef TENKEY_PINKY_ENABLE
#define KC_SYM_LEFT_3L KC_A, KC_NO, KC_EQL, KC_SCLN
#else
#define KC_SYM_LEFT_3L KC_X, KC_EQL, KC_SCLN
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_SYM_LEFT_1R KC_AMPR, KC_ASTR, KC_OS_FUNC
#define KM_TEN_SYM_LEFT_2R KC_UK_AT, KC_UK_TILDE, KC_UNDS
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_SYM_LEFT_3R KC_QUOT, KC_UK_HASH, KC_MINS
#else
#define KM_TEN_SYM_LEFT_3R KC_QUOT, KC_UK_HASH, KC_MINS, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_SYM_LEFT_L KC_TRNS
#define KM_TEN_THUMB_SYM_LEFT_R KC_TRNS
#define KM_TEN_THUMB_SYM_LEFT KM_TEN_THUMB_SYM_LEFT_L, KM_TEN_THUMB_SYM_LEFT_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_SYM_LEFT_L KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_SYM_LEFT_R KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_SYM_LEFT KM_TEN_THUMB_SYM_LEFT_L, KM_TEN_THUMB_SYM_LEFT_R
#else
#define KM_TEN_THUMB_SYM_LEFT
#endif
#endif

#define KM_TEN_SYM_LEFT_1 KM_TEN_SYM_LEFT_1L, KM_TEN_SYM_LEFT_1R
#define KM_TEN_SYM_LEFT_2 KM_TEN_SYM_LEFT_2L, KM_TEN_SYM_LEFT_2R
#define KM_TEN_SYM_LEFT_3 KM_TEN_SYM_LEFT_3L, KM_TEN_SYM_LEFT_3R

#define TENKEY_LAYOUT_SYM_LEFT KM_TEN_SYM_LEFT_1, KM_TEN_SYM_LEFT_2, KM_TEN_SYM_LEFT_3, KM_TEN_THUMB_SYM_LEFT

// Right symbol layer for ten key keyboards.

#define KM_TEN_SYM_RIGHT_1L KC_UK_DQUO, KC_UK_PND, KC_DLR
#define KM_TEN_SYM_RIGHT_2L KC_UK_PIPE, KC_LBRC, KC_LCBR
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_SYM_RIGHT_3L KC_NO, KC_UK_BSLS, KC_RBRC, KC_RCBR
#else
#define KM_TEN_SYM_RIGHT_3L KC_UK_BSLS, KC_RBRC, KC_RCBR
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_SYM_RIGHT_1R KC_PERC, KC_NO, KC_NO
#define KM_TEN_SYM_RIGHT_2R KC_LPRN, KC_LT, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KC_SYM_RIGHT_3R KC_RPRN, KC_GT, KC_NO, KC_O
#else
#define KC_SYM_RIGHT_3R KC_RPRN, KC_GT, KC_DOT
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_SYM_RIGHT_L KC_TRNS
#define KM_TEN_THUMB_SYM_RIGHT_R KC_TRNS
#define KM_TEN_THUMB_SYM_RIGHT KM_TEN_THUMB_SYM_RIGHT_L, KM_TEN_THUMB_SYM_RIGHT_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_SYM_RIGHT_L KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_SYM_RIGHT_R KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_SYM_RIGHT KM_TEN_THUMB_SYM_RIGHT_L, KM_TEN_THUMB_SYM_RIGHT_R
#else
#define KM_TEN_THUMB_SYM_RIGHT
#endif
#endif

#define KM_TEN_SYM_RIGHT_1 KM_TEN_SYM_RIGHT_1L, KM_TEN_SYM_RIGHT_1R
#define KM_TEN_SYM_RIGHT_2 KM_TEN_SYM_RIGHT_2L, KM_TEN_SYM_RIGHT_2R
#define KM_TEN_SYM_RIGHT_3 KM_TEN_SYM_RIGHT_3L, KM_TEN_SYM_RIGHT_3R

#define TENKEY_LAYOUT_SYM_RIGHT KM_TEN_SYM_RIGHT_1, KM_TEN_SYM_RIGHT_2, KM_TEN_SYM_RIGHT_3, KM_TEN_THUMB_SYM_RIGHT

// Navigation layer for ten key keyboards.

#define KM_TEN_NAV_1L KC_NAV_ESC, KC_PSCR, KC_NO
#define KM_TEN_NAV_2L KC_TAB, M_ALT_TAB, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_NAV_3L KC_NO, KC_NAV_CAPS, KC_PGDN, KC_V
#else
#define KM_TEN_NAV_3L KC_NAV_CAPS, KC_PGDN, KC_V
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_NAV_1R LCTL(LGUI(KC_LEFT)), KC_UP, LCTL(LGUI(KC_RIGHT))
#define KM_TEN_NAV_2R KC_LEFT, KC_DOWN, KC_RIGHT
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_NAV_3R KC_HOME, KC_PGUP, KC_END, KC_NO
#else
#define KM_TEN_NAV_3R KC_HOME, KC_PGUP, KC_END
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_NAV_L KC_TRNS
#define KM_TEN_THUMB_NAV_R KC_ESC
#define KM_TEN_THUMB_NAV KM_TEN_THUMB_NAV_L, KM_TEN_THUMB_NAV_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_NAV_L KC_NO, KC_TRNS
#define KM_TEN_THUMB_NAV_R KC_ESC, KC_NO
#define KM_TEN_THUMB_NAV KM_TEN_THUMB_NAV_L, KM_TEN_THUMB_NAV_R
#else
#define KM_TEN_THUMB_NAV
#endif
#endif

#define KM_TEN_NAV_1 KM_TEN_NAV_1L, KM_TEN_NAV_1R
#define KM_TEN_NAV_2 KM_TEN_NAV_2L, KM_TEN_NAV_2R
#define KM_TEN_NAV_3 KM_TEN_NAV_3L, KM_TEN_NAV_3R

#define TENKEY_LAYOUT_NAV KM_TEN_NAV_1, KM_TEN_NAV_2, KM_TEN_NAV_3, KM_TEN_THUMB_NAV

// Number layer for ten key keyboards.

#define KM_TEN_NUM_1L KC_1, KC_2, KC_3
#define KM_TEN_NUM_2L KC_4, KC_5, KC_6
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_NUM_3L KC_0, KC_7, KC_8, KC_9
#else
#define KM_TEN_NUM_3L KC_7, KC_8, KC_9
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_NUM_1R KC_NO, KC_DEL, KC_BSPC
#define KM_TEN_NUM_2R KC_NO, KC_0, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_NUM_3R KC_K, KC_DOT, KC_SLSH, KC_NO
#else
#define KM_TEN_NUM_3R KC_K, KC_DOT, KC_SLSH
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_NUM_L KC_TAB
#define KM_TEN_THUMB_NUM_R KC_TRNS
#define KM_TEN_THUMB_NUM KM_TEN_THUMB_NUM_L, KM_TEN_THUMB_NUM_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_NUM_L KC_SFT_TAB, KC_TAB
#define KM_TEN_THUMB_NUM_R KC_TRNS, KC_NO
#define KM_TEN_THUMB_NUM KM_TEN_THUMB_NUM_L, KM_TEN_THUMB_NUM_R
#else
#define KM_TEN_THUMB_NUM
#endif
#endif

#define KM_TEN_NUM_1 KM_TEN_NUM_1L, KM_TEN_NUM_1R
#define KM_TEN_NUM_2 KM_TEN_NUM_2L, KM_TEN_NUM_2R
#define KM_TEN_NUM_3 KM_TEN_NUM_3L, KM_TEN_NUM_3R

#define TENKEY_LAYOUT_NUM KM_TEN_NUM_1, KM_TEN_NUM_2, KM_TEN_NUM_3, KM_TEN_THUMB_NUM

// Shortcut layer for ten key layouts.

#define KM_TEN_FUNC_1L KC_F1, KC_F2, KC_F3
#define KM_TEN_FUNC_2L KC_F4, KC_F5, KC_F6
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_FUNC_3L KC_F10, KC_F7, KC_F8, KC_F9
#else
#define KM_TEN_FUNC_3L KC_F7, KC_F8, KC_F9
#endif // TENKEY_PINKY_ENABLE

#define KM_TEN_FUNC_1R KC_BRIU, KC_VOLU, KC_NO
#define KM_TEN_FUNC_2R KC_BRID, KC_VOLD, KC_MUTE
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEN_FUNC_3R KC_F10, KC_F11, KC_F12, KC_NO
#else
#define KM_TEN_FUNC_3R KC_F10, KC_F11, KC_F12
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_FUNC_L KC_TRNS
#define KM_TEN_THUMB_FUNC_R KC_TRNS
#define KM_TEN_THUMB_FUNC KM_TEN_THUMB_FUNC_L, KM_TEN_THUMB_FUNC_R
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEN_THUMB_FUNC_L KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_FUNC_R KC_TRNS, KC_TRNS
#define KM_TEN_THUMB_FUNC KM_TEN_THUMB_FUNC_L, KM_TEN_THUMB_FUNC_R
#else
#define KM_TEN_THUMB_FUNC
#endif
#endif

#define KM_TEN_FUNC_1 KM_TEN_FUNC_1L, KM_TEN_FUNC_1R
#define KM_TEN_FUNC_2 KM_TEN_FUNC_2L, KM_TEN_FUNC_2R
#define KM_TEN_FUNC_3 KM_TEN_FUNC_3L, KM_TEN_FUNC_3R

#define TENKEY_LAYOUT_FUNC KM_TEN_FUNC_1, KM_TEN_FUNC_2, KM_TEN_FUNC_3, KM_TEN_THUMB_FUNC

// Ferris sweep test platform - base layer.

#define KM_TEST_BASE_1 KC_NO, KM_TEN_BASE_1L, KC_NO, KC_NO, KM_TEN_BASE_1R, KC_NO
#define KM_TEST_BASE_2 KC_NO, KM_TEN_BASE_2L, KC_NO, KC_NO, KM_TEN_BASE_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_BASE_3 KM_TEN_BASE_3L, KC_NO, KC_NO, KM_TEN_BASE_3R
#else
#define KM_TEST_BASE_3 KC_NO, KM_TEN_BASE_3L, KC_NO, KC_NO, KM_TEN_BASE_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_BASE KC_NO, KM_TEN_THUMB_BASE_L, KM_TEN_THUMB_BASE_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_BASE KM_TEN_THUMB_BASE_L, KM_TEN_THUMB_BASE_R
#else
#define KM_TEST_THUMB_BASE KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_BASE KM_TEST_BASE_1, KM_TEST_BASE_2, KM_TEST_BASE_3, KM_TEST_THUMB_BASE

// Ferris sweep test platform - fill left layer.

#define KM_TEST_FILL_LEFT_1 KC_NO, KM_TEN_FILL_LEFT_1L, KC_NO, KC_NO, KM_TEN_FILL_LEFT_1R, KC_NO
#define KM_TEST_FILL_LEFT_2 KC_NO, KM_TEN_FILL_LEFT_2L, KC_NO, KC_NO, KM_TEN_FILL_LEFT_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_FILL_LEFT_3 KM_TEN_FILL_LEFT_3L, KC_NO, KC_NO, KM_TEN_FILL_LEFT_3R
#else
#define KM_TEST_FILL_LEFT_3 KC_NO, KM_TEN_FILL_LEFT_3L, KC_NO, KC_NO, KM_TEN_FILL_LEFT_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_FILL_LEFT KC_NO, KM_TEN_THUMB_FILL_LEFT_L, KM_TEN_THUMB_FILL_LEFT_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_FILL_LEFT KM_TEN_THUMB_FILL_LEFT_L, KM_TEN_THUMB_FILL_LEFT_R
#else
#define KM_TEST_THUMB_FILL_LEFT KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_FILL_LEFT KM_TEST_FILL_LEFT_1, KM_TEST_FILL_LEFT_2, KM_TEST_FILL_LEFT_3, KM_TEST_THUMB_FILL_LEFT

// Ferris sweep test platform - fill right layer.

#define KM_TEST_FILL_RIGHT_1 KC_NO, KM_TEN_FILL_RIGHT_1L, KC_NO, KC_NO, KM_TEN_FILL_RIGHT_1R, KC_NO
#define KM_TEST_FILL_RIGHT_2 KC_NO, KM_TEN_FILL_RIGHT_2L, KC_NO, KC_NO, KM_TEN_FILL_RIGHT_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_FILL_RIGHT_3 KM_TEN_FILL_RIGHT_3L, KC_NO, KC_NO, KM_TEN_FILL_RIGHT_3R
#else
#define KM_TEST_FILL_RIGHT_3 KC_NO, KM_TEN_FILL_RIGHT_3L, KC_NO, KC_NO, KM_TEN_FILL_RIGHT_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_FILL_RIGHT KC_NO, KM_TEN_THUMB_FILL_RIGHT_L, KM_TEN_THUMB_FILL_RIGHT_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_FILL_RIGHT KM_TEN_THUMB_FILL_RIGHT_L, KM_TEN_THUMB_FILL_RIGHT_R
#else
#define KM_TEST_THUMB_FILL_RIGHT KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_FILL_RIGHT KM_TEST_FILL_RIGHT_1, KM_TEST_FILL_RIGHT_2, KM_TEST_FILL_RIGHT_3, KM_TEST_THUMB_FILL_RIGHT

// Ferris sweep test platform - sym left layer.

#define KM_TEST_SYM_LEFT_1 KC_NO, KM_TEN_SYM_LEFT_1L, KC_NO, KC_NO, KM_TEN_SYM_LEFT_1R, KC_NO
#define KM_TEST_SYM_LEFT_2 KC_NO, KM_TEN_SYM_LEFT_2L, KC_NO, KC_NO, KM_TEN_SYM_LEFT_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_SYM_LEFT_3 KM_TEN_SYM_LEFT_3L, KC_NO, KC_NO, KM_TEN_SYM_LEFT_3R
#else
#define KM_TEST_SYM_LEFT_3 KC_NO, KM_TEN_SYM_LEFT_3L, KC_NO, KC_NO, KM_TEN_SYM_LEFT_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_SYM_LEFT KC_NO, KM_TEN_THUMB_SYM_LEFT_L, KM_TEN_THUMB_SYM_LEFT_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_SYM_LEFT KM_TEN_THUMB_SYM_LEFT_L, KM_TEN_THUMB_SYM_LEFT_R
#else
#define KM_TEST_THUMB_SYM_LEFT KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_SYM_LEFT KM_TEST_SYM_LEFT_1, KM_TEST_SYM_LEFT_2, KM_TEST_SYM_LEFT_3, KM_TEST_THUMB_SYM_LEFT

// Ferris sweep test platform - sym right layer.

#define KM_TEST_SYM_RIGHT_1 KC_NO, KM_TEN_SYM_RIGHT_1L, KC_NO, KC_NO, KM_TEN_SYM_RIGHT_1R, KC_NO
#define KM_TEST_SYM_RIGHT_2 KC_NO, KM_TEN_SYM_RIGHT_2L, KC_NO, KC_NO, KM_TEN_SYM_RIGHT_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_SYM_RIGHT_3 KM_TEN_SYM_RIGHT_3L, KC_NO, KC_NO, KM_TEN_SYM_RIGHT_3R
#else
#define KM_TEST_SYM_RIGHT_3 KC_NO, KM_TEN_SYM_RIGHT_3L, KC_NO, KC_NO, KM_TEN_SYM_RIGHT_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_SYM_RIGHT KC_NO, KM_TEN_THUMB_SYM_RIGHT_L, KM_TEN_THUMB_SYM_RIGHT_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_SYM_RIGHT KM_TEN_THUMB_SYM_RIGHT_L, KM_TEN_THUMB_SYM_RIGHT_R
#else
#define KM_TEST_THUMB_SYM_RIGHT KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_SYM_RIGHT KM_TEST_SYM_RIGHT_1, KM_TEST_SYM_RIGHT_2, KM_TEST_SYM_RIGHT_3, KM_TEST_THUMB_SYM_RIGHT

// Ferris sweep test platform - nav layer.

#define KM_TEST_NAV_1 KC_NO, KM_TEN_NAV_1L, KC_NO, KC_NO, KM_TEN_NAV_1R, KC_NO
#define KM_TEST_NAV_2 KC_NO, KM_TEN_NAV_2L, KC_NO, KC_NO, KM_TEN_NAV_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_NAV_3 KM_TEN_NAV_3L, KC_NO, KC_NO, KM_TEN_NAV_3R
#else
#define KM_TEST_NAV_3 KC_NO, KM_TEN_NAV_3L, KC_NO, KC_NO, KM_TEN_NAV_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_NAV KC_NO, KM_TEN_THUMB_NAV_L, KM_TEN_THUMB_NAV_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_NAV KM_TEN_THUMB_NAV_L, KM_TEN_THUMB_NAV_R
#else
#define KM_TEST_THUMB_NAV KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_NAV KM_TEST_NAV_1, KM_TEST_NAV_2, KM_TEST_NAV_3, KM_TEST_THUMB_NAV

// Ferris sweep test platform - num layer.

#define KM_TEST_NUM_1 KC_NO, KM_TEN_NUM_1L, KC_NO, KC_NO, KM_TEN_NUM_1R, KC_NO
#define KM_TEST_NUM_2 KC_NO, KM_TEN_NUM_2L, KC_NO, KC_NO, KM_TEN_NUM_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_NUM_3 KM_TEN_NUM_3L, KC_NO, KC_NO, KM_TEN_NUM_3R
#else
#define KM_TEST_NUM_3 KC_NO, KM_TEN_NUM_3L, KC_NO, KC_NO, KM_TEN_NUM_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_NUM KC_NO, KM_TEN_THUMB_NUM_L, KM_TEN_THUMB_NUM_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_NUM KM_TEN_THUMB_NUM_L, KM_TEN_THUMB_NUM_R
#else
#define KM_TEST_THUMB_NUM KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_NUM KM_TEST_NUM_1, KM_TEST_NUM_2, KM_TEST_NUM_3, KM_TEST_THUMB_NUM

// Ferris sweep test platform - func layer.

#define KM_TEST_FUNC_1 KC_NO, KM_TEN_FUNC_1L, KC_NO, KC_NO, KM_TEN_FUNC_1R, KC_NO
#define KM_TEST_FUNC_2 KC_NO, KM_TEN_FUNC_2L, KC_NO, KC_NO, KM_TEN_FUNC_2R, KC_NO
#ifdef TENKEY_PINKY_ENABLE
#define KM_TEST_FUNC_3 KM_TEN_FUNC_3L, KC_NO, KC_NO, KM_TEN_FUNC_3R
#else
#define KM_TEST_FUNC_3 KC_NO, KM_TEN_FUNC_3L, KC_NO, KC_NO, KM_TEN_FUNC_3R, KC_NO
#endif // TENKEY_PINKY_ENABLE

#ifdef TENKEY_TWO_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_FUNC KC_NO, KM_TEN_THUMB_FUNC_L, KM_TEN_THUMB_FUNC_R, KC_NO
#else
#ifdef TENKEY_FOUR_THUMBKEYS_ENABLE
#define KM_TEST_THUMB_FUNC KM_TEN_THUMB_FUNC_L, KM_TEN_THUMB_FUNC_R
#else
#define KM_TEST_THUMB_FUNC KC_NO, KC_NO, KC_NO, KC_NO
#endif // TENKEY_FOUR_THUMBKEYS_ENABLE
#endif // TENKEY_TWO_THUMBKEYS_ENABLE

#define TENKEY_TEST_LAYOUT_FUNC KM_TEST_FUNC_1, KM_TEST_FUNC_2, KM_TEST_FUNC_3, KM_TEST_THUMB_FUNC

#endif // USERSPACE
